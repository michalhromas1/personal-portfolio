// --- Breakpoints ---
$brp-fluid--base: 375px;
$brp-1: 500px;


// --- Breakpoint Element Min Widths ---
$minw-brp-fluid--base: 31rem;


// --- Functions ---
@function get-fluid-size($min-size-in-rems, $related-viewport-width-in-px) {
  $result: (($min-size-in-rems / 1rem) / ($related-viewport-width-in-px / 1px) * 1000) * 1vw;
  @return floor-to-precision($result);
}

@function get-fluid-size-max-breakpoint($max-size-in-rems, $fluid-size-in-vw) {
  $result: (($max-size-in-rems / 1rem) / ($fluid-size-in-vw / 1vw) * 1000) * 1px;
  @return floor-to-precision($result);
}

@function get-em($desired-value-in-rem, $related-fs-in-rem) {
  $result: ($desired-value-in-rem / $related-fs-in-rem) * 1em;
  @return floor-to-precision($result);
}

@function floor-to-precision($number, $precision: 3) {
  @if $precision < 1 {
    @return floor($number);
  }

  $multiplier: pow(10, $precision);
  @return floor($number * $multiplier) / $multiplier;
}

@function pow($base, $exponent) {
  $value: 1;

  @if $exponent < 0 {
    @return $base;
  }

  @else if $exponent !=0 {
    @for $i from 0 to $exponent {
      $value: $value * $base;
    }
  }

  @return $value;
}


// --- Mixins ---
@mixin fluid-size($property, $init-size-in-rem, $to-in-px, $from-in-px: $brp-fluid--base) {
  $size--fluid: get-fluid-size($init-size-in-rem, $from-in-px);

  @if $brp-fluid--base>=$from-in-px {
    #{$property}: $size--fluid;
  }

  @else {
    @media screen and (min-width: $from-in-px) {
      #{$property}: $size--fluid;
    }
  }

  @media screen and (min-width: $to-in-px) {
    #{$property}: floor-to-precision((($to-in-px / 1px) * ($size--fluid / 1vw) / 1000) * 1rem);
  }
}

@mixin fluid-fs($init-fs-in-rem, $to-in-px, $from-in-px: $brp-fluid--base) {
  @include fluid-size(font-size, $init-fs-in-rem, $to-in-px, $from-in-px);
}

@mixin curved-edge {
  border-top-left-radius: 50% 1.2%;
  border-top-right-radius: 50% 1.2%;
}